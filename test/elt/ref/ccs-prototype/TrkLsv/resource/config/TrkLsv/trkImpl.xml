<?xml version="1.0" encoding="UTF-8"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml" xmlns:customActionDomain="http://my.custom-actions.domain/CUSTOM" version="1.0" initial="State">
  <final id="Off"/>
  <parallel id="State">
    <state id="State:On">
      <initial>
        <transition target="State:On:NotOperational"/>
      </initial>
  
      <state id="State:On:NotOperational">
  	  <initial>
  	    <transition target="State:On:NotOperational::NotReady"/>
  	  </initial>
  	
  	  <state id="State:On:NotOperational::NotReady">
  	    <transition event="Init" target="State:On:NotOperational::Initializing">
  	      <customActionDomain:ActionInit name="ActionInit"/>
  	    </transition>
  	  </state>
  	
  	  <state id="State:On:NotOperational::Error">
  	    <transition event="Recovered" target="State:On:NotOperational::NotReady"/>
  	  </state>
  	
  	  <state id="State:On:NotOperational::Initializing">
  	    <onentry>
  	      <customActionDomain:EntrytInit name="EntrytInit"/>
  	    </onentry>	
  	    <invoke id="DoInit"/>
  	    <transition event="Stop" target="State:On:NotOperational::NotReady">
  	      <customActionDomain:ActionStopInit name="ActionStopInit"/>
  	    </transition>
  	    <transition event="InitCompleted" target="State:On:NotOperational::Ready"/>
  	    <transition event="Init" target="State:On:NotOperational::Initializing">
  	      <customActionDomain:ActionInit name="ActionInit"/>
  	    </transition>
  	    <transition event="InitFailed" target="State:On:NotOperational::NotReady"/>
  	  </state>
  	
  	  <state id="State:On:NotOperational::Ready">
  	    <transition event="Enable" target="State:On:Operational">
  	      <customActionDomain:ActionEnable name="ActionEnable"/>
  	    </transition>
  	    <transition event="Init" target="State:On:NotOperational::Initializing">
  	      <customActionDomain:ActionInit name="ActionInit"/>
  	    </transition>
  	  </state>
  	  <transition event="GeneralFailureEx" target="State:On:NotOperational::Error"/>
  	  <transition event="SimulationStart" target="State">
  	    <customActionDomain:ActionPrepareSimulation name="ActionPrepareSimulation"/>
  	  </transition>
  	  <transition event="SimulationStop" target="State">
  	    <customActionDomain:ActionPrepareNoSimulation name="ActionPrepareNoSimulation"/>
  	  </transition>
  	  <transition event="Config" target="State"/>
  	</state>
  
      <state id="State:On:Operational">
  	  <initial>
  	    <transition target="State:On:Operational::Idle"/>
  	  </initial>
  	
  	  <state id="State:On:Operational::Idle">
  	  </state>
  	
  	  <state id="State:On:Operational::PresettingRaDec">
  	    <transition event="Timeout" target="State:On:Operational::Error"/>
  	    <transition event="NewEstimation" cond="EstimatedStateIsTracking" target="State:On:Operational::Tracking"/>
  	  </state>
  	
  	  <state id="State:On:Operational::Error">
  	    <transition event="Recovered" target="State:On:Operational"/>
  	  </state>
  	
  	  <state id="State:On:Operational::Tracking">
  	    <transition event="NewEstimation" cond="EstimatedStateIsPresettingRaDec" target="State:On:Operational::PresettingRaDec"/>
  	  </state>
  	
  	  <state id="State:On:Operational::MovingTo">
  	    <transition event="Timeout" target="State:On:Operational::Error"/>
  	    <transition event="NewEstimation" cond="EstimatedStateIsStandStill" target="State:On:Operational::Idle"/>
  	  </state>
  	  <invoke id="DoControl"/>
  	  <transition event="Disable" target="State:On:NotOperational::Ready">
  	    <customActionDomain:ActionDisable name="ActionDisable"/>
  	  </transition>
  	  <transition event="GeneralFailureEx" target="State:On:Operational::Error"/>
  	  <transition event="NewEstimation" cond="EstimatedStateIsTrackingUnexpected" target="State:On:Operational::Tracking"/>
  	  <transition event="Stop" target="State:On:Operational::Idle">
  	    <customActionDomain:ActionStopMoving name="ActionStopMoving"/>
  	  </transition>
  	  <transition event="NewEstimation" cond="EstimatedStateIsStandStillUnexpected" target="State:On:Operational::Idle"/>
  	  <transition event="Preset" target="State:On:Operational::PresettingRaDec">
  	    <customActionDomain:ActionPreset name="ActionPreset"/>
  	  </transition>
  	  <transition event="MoveTo" target="State:On:Operational::MovingTo">
  	    <customActionDomain:ActionMoveTo name="ActionMoveTo"/>
  	  </transition>
  	  <transition event="NewEstimation" cond="EstimatedStateIsMovingUnexpected" target="State:On:Operational::MovingTo"/>
  	</state>
  
    </state>
    <state id="State:Simulation">
      <initial>
        <transition target="State:Simulation:WaitingConfiguration"/>
      </initial>
  
      <state id="State:Simulation:SimulationOn">
  	  <invoke id="DoSimulation"/>
  	</state>
  
      <state id="State:Simulation:SimulationOff">
  	</state>
  
      <state id="State:Simulation:WaitingConfiguration">
  	  <transition event="ConfigurationLoaded" cond="EstimatedSimulationOff" target="State:Simulation:SimulationOff"/>
  	  <transition event="ConfigurationLoaded" cond="EstimatedSimulationOn" target="State:Simulation:SimulationOn"/>
  	</state>
  
    </state>
    <state id="State:AltFunction">
      <initial>
        <transition target="State:AltFunction:NotOperational"/>
      </initial>
  
      <state id="State:AltFunction:NotOperational">
  	  <transition event="NewEstimation" cond="EstimatedAltOperational" target="State:AltFunction:Operational"/>
  	</state>
  
      <state id="State:AltFunction:Operational">
  	  <transition event="NewEstimation" cond="EstimatedAltNotOperational" target="State:AltFunction:NotOperational"/>
  	</state>
  
    </state>
    <state id="State:AzFunction">
      <initial>
        <transition target="State:AzFunction:NotOperational"/>
      </initial>
  
      <state id="State:AzFunction:NotOperational">
  	  <transition event="NewEstimation" cond="EstimatedAzOperational" target="State:AzFunction:Operational"/>
  	</state>
  
      <state id="State:AzFunction:Operational">
  	  <transition event="NewEstimation" cond="EstimatedAzNotOperational" target="State:AzFunction:NotOperational"/>
  	</state>
  
    </state>
    <onentry>
      <customActionDomain:ActionLoadConfiguration name="ActionLoadConfiguration"/>
    </onentry>	
    <invoke id="DoEstimation"/>
    <transition event="Shutdown" target="Off"/>
    <transition event="Reset" target="State">
      <customActionDomain:ActionReset name="ActionReset"/>
    </transition>
    <transition event="SetLogLevel">
      <customActionDomain:ActionSetLogLevel name="ActionSetLogLevel"/>
    </transition>
    <transition event="Status">
      <customActionDomain:ActionStatus name="ActionStatus"/>
    </transition>
    <transition event="Stop">
      <customActionDomain:ActionStop name="ActionStop"/>
    </transition>
  </parallel>
</scxml>
