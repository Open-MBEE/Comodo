/* 
 * This code was generated by Comodo (https://github.com/Open-MBEE/Comodo) 
 * using the QPC-C Target Platform
 *
 * - Generated Class (Comodo Module):
 *      blinkyChoice
 *
 * - Generated State Machine (Comodo Component):
 *      AbsoluteTimerSM
 * 
 *
 * ############### Requirements ###############
 *  Implements: 
 * - https://cae-jama.jpl.nasa.gov/rest/latest/items/724776 
 * - https://cae-jama.jpl.nasa.gov/rest/latest/items/724777 
 *
 * ############################################
 *
 */


 

#ifndef BLINKYCHOICE_ABSOLUTETIMERSM_H_
#define BLINKYCHOICE_ABSOLUTETIMERSM_H_

#include <stdbool.h>
#include <qf_port.h>
#include <qassert.h>
#include <blinkyChoice_statechart_signals.h>
#include <blinkyChoice_AbsoluteTimerSM_states.h>
#include <blinkyChoice_AbsoluteTimerSM_impl.h>


/**
 * Declare the state machine struct, encapsulating the extended state variables.
 * It tracks any timers, owned orthogonal regions, history states, substates.
 */
typedef struct blinkyChoice_AbsoluteTimerSM {
    QActive super;  // C-style inheritance
    QActive *active;  // containing machine if this is a submachine instance
    char objName[128];
    blinkyChoice_AbsoluteTimerSM_impl *impl;
    enum blinkyChoice_AbsoluteTimerSM_state myState;

    /* Completion event for exiting from composite/orthogonal/submachine state */
    QCompletionEvt BLINKYCHOICE_ABSOLUTETIMERSM_COMPLETION_EVENT_;

    /* Bail event to terminate orthogonal/submachine substate */
    QEvt BLINKYCHOICE_ABSOLUTETIMERSM_BAIL_EVENT_;

    /* TimeEvents object instances (only relative timers are supported) */
    QTimeEvt initStateRelativeTimer;


} blinkyChoice_AbsoluteTimerSM;


/** 
 * blinkyChoice_AbsoluteTimerSM Constructor
 *
 * This State machine constructor is responsible for initializing
 * the object, allocating and initializing any orthogonal regions, 
 * and initializing the timers.
 */
blinkyChoice_AbsoluteTimerSM *blinkyChoice_AbsoluteTimerSM_constructor (blinkyChoice_AbsoluteTimerSM *me, const char *objNameNew, blinkyChoice_AbsoluteTimerSM_impl *implObj, QActive *active);

/**
  * Returns the instance of the Implementation class for this QActive.
  */
blinkyChoice_AbsoluteTimerSM_impl *blinkyChoice_AbsoluteTimerSM_get_impl (blinkyChoice_AbsoluteTimerSM *me);

/**
 * Returns the unique enum representing the current state of this machine.
 */
blinkyChoice_AbsoluteTimerSM_state blinkyChoice_AbsoluteTimerSM_get_current_state (blinkyChoice_AbsoluteTimerSM *me);

/**
 * Method to initialize state machine (equivalent to initial pseudostate)
 */
QState blinkyChoice_AbsoluteTimerSM_initial (blinkyChoice_AbsoluteTimerSM *me, QEvt const *e);

/**
 * State methods
 */
QState blinkyChoice_AbsoluteTimerSM_initState(blinkyChoice_AbsoluteTimerSM *me, QEvt const *e); 
QState blinkyChoice_AbsoluteTimerSM_Absolute_state2(blinkyChoice_AbsoluteTimerSM *me, QEvt const *e); 




#endif /* BLINKYCHOICE_ABSOLUTETIMERSM_H_ */
