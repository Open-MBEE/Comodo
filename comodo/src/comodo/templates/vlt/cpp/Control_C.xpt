«REM»
/** 
 * COMODO - Multiplatform Component Code Generator 
 *    (c) European Southern Observatory, 2011 
 *    Copyright by ESO 
 *    All rights reserved 
 * 
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * $Id: $
 *
 */
«ENDREM»
 
«DEFINE Root FOR String -»
«FILE this+'/src/'+this+'Control.C'-»
«EXPAND comodo::templates::vlt::txt::Copyright::Source FOR "" -»

/******************************************************************************
*   NAME
*   «this»Control - control control process
* 
*   SYNOPSIS
*   «this»Control [-r dbRoot] [-n processName] 
* 
*   DESCRIPTION
*
*   The optional argument <dbRoot> is the root point of the database branch. 
*   If omitted it is defaulted to the hard-coded value of ":Appl_data:TCS".
*
*   The optional argument <processName> is the name under which the process'
*   instance registers with the CCS and hence the destination process name 
*   for commands to it. If omitted, the instance registers with CCS with 
*   its UNIX process name, as passed by the shell in argv[0].
*
*   FILES
*   «this»_ERRORS - r - error message definitions
*
*   ENVIRONMENT
*
*   COMPILATION FLAGS
*
*   COMMANDS
*   all standard commands
*
*   RETURN VALUES
*   0 if everything OK
*   1 on error
*
*   CAUTIONS 
*
*   EXAMPLES
*
*   SEE ALSO
*
*   BUGS   
* 
*------------------------------------------------------------------------------
*/

#define _POSIX_SOURCE 1
#include "vltPort.h"

#include "«this».h"
«this»WSF_RCSID("@(#) $Id: «this»Control.C 593 2012-04-22 12:12:12Z landolfa $")

#include "«this»APPLICATION.h"


/**
 * Main Function
 */
int main(int argc, char *argv[])
{
    if («this»APPLICATION::Execute(argc, argv) == FAILURE)
       {
       return EXIT_FAILURE;
       }

    return EXIT_SUCCESS;
}

// __oOo__

«ENDFILE»
«ENDDEFINE»

