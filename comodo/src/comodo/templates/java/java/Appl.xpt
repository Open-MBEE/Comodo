«REM»
/** 
 * COMODO - Multiplatform Component Code Generator 
 *    (c) European Southern Observatory, 2011 
 *    Copyright by ESO 
 *    All rights reserved 
 * 
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * $Id: Component.xpt 481 2011-10-10 10:46:44Z landolfa $
 * 
 */
«ENDREM»

«IMPORT uml»

«EXTENSION comodo::xtend::cmdo::helpers»
«EXTENSION comodo::xtend::uml::statemachine»

«DEFINE Root FOR uml::StateMachine»
«FILE "./src/"+getPackageVar()+".java"-»

import org.apache.commons.scxml.env.AbstractStateMachine;

public class «getPackageVar()» extends AbstractStateMachine
{
	public «getPackageVar()»() {
		super(«getPackageVar()».class.getClassLoader().getResource("«getPackageVar()».xml"));
	}

«FOREACH this.listStates().name AS stateName»
	public void «stateName»() {
		/* your visitor code goes here */
		getLog().info("Visiting state: «stateName»");
	}
«ENDFOREACH»

«FOREACH this.listRegions().name AS regionName»
	public void «regionName»() {
		/* your visitor code goes here */
		getLog().info("Visiting parallel: «regionName»");
	}
«ENDFOREACH»
	
	public static void main(String[] argv) throws java.io.IOException, java.lang.InterruptedException {
		«getPackageVar()» sm = new «getPackageVar()»();
		sm.resetMachine();
		/*
		sm.fireEvent("MY_EVENT");
		*/
	}
} 
«ENDFILE»
«ENDDEFINE»


