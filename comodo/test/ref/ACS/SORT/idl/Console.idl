/*******************************************************************************
 *    ALMA - Atacama Large Millimiter Array
 *
 *    (c) European Southern Observatory, 2002
 *    Copyright by ESO (in the framework of the ALMA collaboration)
 *    and Cosylab 2002, All rights reserved
 *  
 *    This library is free software; you can redistribute it and/or
 *    modify it under the terms of the GNU Lesser General Public
 *    License as published by the Free Software Foundation; either
 *    version 2.1 of the License, or (at your option) any later version.
 *
 *    This library is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *    Lesser General Public License for more details.
 *
 *    You should have received a copy of the GNU Lesser General Public
 *    License along with this library; if not, write to the Free Software
 *    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
 *
 * "@(#) $Id$" 
 *
 * who                when       what
 * ----------------  ----------  ----------------------------------------------
 * COMODO                        Created.
 * 
 */


#ifndef _CONSOLE_IDL_
#define _CONSOLE_IDL_

#include <SORTCommon.idl>
#include <acscomponent.idl>

#include <CommonOperations.idl>
 


#pragma prefix "alma"

/** 
 * @file Console.idl
 */
module SORT
{
	/**
	 * Operator's interface to set automatic and manual modes. Grants manual access
	 * @interface Console
	 */
	interface Console  :  CommonOperations
	{  
		
		/**
		 * et the automatic manual mode for the operator. Raises an exception
		 * @param mode if true then automatic mode otherwise manual mode.
		 * @return void
		 */
		void setMode(in boolean mode)
			raises(SORTErr::AlreadyInAutomaticEx);                             
		
		/**
		 * @return boolean
		 */
		boolean getMode();                             
		
		/**
		 * Move telescope in synchronous mode. Raises an exception if the requested
		 * @param coordinates az, el coordinates
		 * @return void
		 */
		void moveTelescope(in Position coordinates)
			raises(SORTErr::PositionOutOfLimitsEx, SORTErr::SystemInAutoModeEx);                             
		
		/**
		 * @return Position
		 */
		Position getTelescopePosition();                             
		
		/**
		 * Get an image from the camera (from actual position of telescope).
		 * @return ImageType
		 */
		ImageType getCameraImage()
			raises(SORTErr::SystemInAutoModeEx, SORTErr::CameraIsOffEx);                             
		
		
	};
};
#endif /* _CONSOLE_IDL_ */
